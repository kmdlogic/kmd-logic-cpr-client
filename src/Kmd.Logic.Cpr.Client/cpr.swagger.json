{
  "swagger": "2.0",
  "info": {
    "version": "1.2.1",
    "title": "KMD Logic CPR Service API"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/cpr/by-cpr/{cpr}": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets citizen data by CPR",
        "operationId": "GetByCpr",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "Personal identification number of danish citizen",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CitizenResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/by-cpr-detailed/{cpr}": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets detailed citizen data by CPR",
        "operationId": "GetCprDetailsByCpr",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "Personal identification number of danish citizen",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CitizenDetailedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/{id}": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets citizen data by ID",
        "operationId": "GetById",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of danish citizen",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CitizenResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/by-id-detailed/{id}": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets detailed citizen data by ID",
        "operationId": "GetCprDetailsById",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of danish citizen",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CitizenDetailedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/events": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets citizen events for the nominated period",
        "operationId": "GetEvents",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Query events from this date and time",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Query events to this date and time",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pageNo",
            "in": "query",
            "description": "The page number to query",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return",
            "type": "integer",
            "format": "int32",
            "maximum": 100000,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CitizenEvent"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/subscribed-events": {
      "get": {
        "tags": [
          "Cpr"
        ],
        "summary": "Gets subscribed citizen events for the nominated period",
        "operationId": "GetSubscribedEvents",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "Query events from this date and time",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "Query events to this date and time",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "Identifier that represents CPR environment and associated configuration which this request will be sent with.",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "pageNo",
            "in": "query",
            "description": "The page number to query",
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of results to return",
            "type": "integer",
            "format": "int32",
            "maximum": 100000,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SubscribedCitizenEvents"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/{configurationId}": {
      "get": {
        "tags": [
          "CprConfiguration"
        ],
        "summary": "Retrieves Cpr configuration assigned to the logic subscription",
        "operationId": "GetCprConfiguration",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CprProviderConfigurationModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations": {
      "get": {
        "tags": [
          "CprConfiguration"
        ],
        "summary": "Retrieves all Cpr configurations assigned to the logic subscription",
        "operationId": "GetAllCprConfigurations",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CprProviderConfigurationModel"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/subscribe/by-cpr/{cpr}": {
      "post": {
        "tags": [
          "CprSubscription"
        ],
        "summary": "Subscribes for CPR events by CPR number",
        "operationId": "SubscribeByCpr",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "CPR Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "CPR Subscription Request",
            "schema": {
              "$ref": "#/definitions/CprSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/subscribe/{id}": {
      "post": {
        "tags": [
          "CprSubscription"
        ],
        "summary": "Subscribes for CPR events by PersonId",
        "operationId": "SubscribeById",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "CPR Person ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "description": "CPR Subscription Request",
            "schema": {
              "$ref": "#/definitions/CprSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/unsubscribe/by-cpr/{cpr}": {
      "delete": {
        "tags": [
          "CprSubscription"
        ],
        "summary": "Unsubscribes for CPR events by CPR number",
        "operationId": "UnsubscribeByCpr",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "cpr",
            "in": "path",
            "description": "CPR Number",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "CPR Configuration ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/unsubscribe/{id}": {
      "delete": {
        "tags": [
          "CprSubscription"
        ],
        "summary": "Unsubscribes for CPR events by PersonId",
        "operationId": "UnsubscribeById",
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "LoGIC subscription ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "id",
            "in": "path",
            "description": "CPR Person ID",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "CPR Configuration ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/data-distributor": {
      "post": {
        "tags": [
          "DataDistributorConfiguration"
        ],
        "summary": "Adds new CPR configuration and uploads certificate file to the Azure Key Vault",
        "operationId": "CreateDataDistributorConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "certificatePassword",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CprProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/data-distributor/{configurationId}": {
      "put": {
        "tags": [
          "DataDistributorConfiguration"
        ],
        "summary": "Adds or updates existing cpr configuration and uploads certificate file to the Azure Key Vault",
        "operationId": "UpdateDataDistributorConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "certificatePassword",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CprProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/experian": {
      "post": {
        "tags": [
          "ExperianConfiguration"
        ],
        "summary": "Adds new CPR Experian configuration",
        "operationId": "CreateExperianConfiguration",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperianConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExperianProviderConfigurationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/experian/{configurationId}": {
      "put": {
        "tags": [
          "ExperianConfiguration"
        ],
        "summary": "Adds or updates existing Experian configuration",
        "operationId": "UpdateExperianConfiguration",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperianConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExperianProviderConfigurationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/fake-provider": {
      "post": {
        "tags": [
          "FakeProviderConfiguration"
        ],
        "operationId": "CreateFakeProviderConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FakeProviderConfigurationModel"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/fake-provider/{configurationId}": {
      "put": {
        "tags": [
          "FakeProviderConfiguration"
        ],
        "operationId": "UpdateFakeProviderConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FakeProviderConfigurationModel"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/fake-provider/{configurationId}/data": {
      "put": {
        "tags": [
          "FakeProviderConfiguration"
        ],
        "operationId": "SaveData",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "data",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FakeProviderConfigurationModel"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/service-platform": {
      "post": {
        "tags": [
          "ServicePlatformConfiguration"
        ],
        "operationId": "CreateServicePlatformConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "certificatePassword",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "serviceAgreementUuid",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userSystemUuid",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userUuid",
            "in": "formData",
            "description": "All supported UserUuids can be fetched using '/municipalities' endpoint.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServicePlatformProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/cpr/configurations/service-platform/{configurationId}": {
      "put": {
        "tags": [
          "ServicePlatformConfiguration"
        ],
        "operationId": "UpdateServicePlatformConfiguration",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "environment",
            "in": "formData",
            "type": "string",
            "enum": [
              "Production",
              "Test"
            ]
          },
          {
            "name": "certificate",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "certificatePassword",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "serviceAgreementUuid",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userSystemUuid",
            "in": "formData",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userUuid",
            "in": "formData",
            "description": "All supported UserUuids can be fetched using '/municipalities' endpoint.",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServicePlatformProviderConfiguration"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Parent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        }
      }
    },
    "LegalGuardian": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        },
        "relation": {
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "buildingNo": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "municipalityCode": {
          "type": "string"
        },
        "municipalityName": {
          "type": "string"
        },
        "roadCode": {
          "type": "string"
        },
        "darAddress": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "houseNo": {
          "type": "string"
        },
        "postDistrict": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        },
        "doorNo": {
          "type": "string"
        },
        "roadAddressingName": {
          "type": "string"
        },
        "isCurrent": {
          "type": "boolean"
        },
        "movedTo": {
          "format": "date-time",
          "type": "string"
        },
        "movedAway": {
          "format": "date-time",
          "type": "string"
        },
        "vacatingDateUncertainityMarking": {
          "type": "boolean"
        },
        "careOfAddress": {
          "type": "string"
        }
      }
    },
    "CitizenResponse": {
      "required": [
        "id",
        "nameAndAddressProtection"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parent"
          }
        },
        "legalGuardians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegalGuardian"
          }
        },
        "nameAndAddressProtection": {
          "type": "boolean"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "citizenships": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Citizenship": {
      "type": "object",
      "properties": {
        "countryName": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        }
      }
    },
    "Children": {
      "type": "object",
      "properties": {
        "cpr": {
          "type": "string"
        }
      }
    },
    "SpouseDetails": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        }
      }
    },
    "CitizenDetailedResponse": {
      "required": [
        "id",
        "nameAndAddressProtection"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "cpr": {
          "type": "string"
        },
        "maritalStatus": {
          "type": "string"
        },
        "fromMarriedDate": {
          "format": "date-time",
          "type": "string"
        },
        "fromMarriedUncertainityMarking": {
          "type": "boolean"
        },
        "status": {
          "type": "string"
        },
        "parents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parent"
          }
        },
        "legalGuardians": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegalGuardian"
          }
        },
        "nameAndAddressProtection": {
          "type": "boolean"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "citizenships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Citizenship"
          }
        },
        "addressingName": {
          "type": "string"
        },
        "dateOfBirth": {
          "format": "date-time",
          "type": "string"
        },
        "dateOfBirthUncertainityMarking": {
          "type": "boolean"
        },
        "birthRegistrationLocationCode": {
          "type": "string"
        },
        "birthRegistrationLocationName": {
          "type": "string"
        },
        "supplementalBirthRegistartionPlace": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "position": {
          "type": "string"
        },
        "statusDate": {
          "format": "date-time",
          "type": "string"
        },
        "statusDateUncertainityMarking": {
          "type": "boolean"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Children"
          }
        },
        "firstNameMarking": {
          "type": "string"
        },
        "middleNameMarking": {
          "type": "string"
        },
        "lastNameMarking": {
          "type": "string"
        },
        "spouse": {
          "$ref": "#/definitions/SpouseDetails"
        }
      }
    },
    "CitizenEvent": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "The CPR identifier",
          "type": "string"
        },
        "action": {
          "description": "A description of the action that occurred. This may differ between providers.",
          "type": "string"
        },
        "actionDateTime": {
          "format": "date-time",
          "description": "The date and time the action occurred",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SubscribedCitizenEvents": {
      "required": [
        "actualCount"
      ],
      "type": "object",
      "properties": {
        "events": {
          "description": "The events filtered by subscription",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CitizenEvent"
          }
        },
        "actualCount": {
          "format": "int32",
          "description": "Number of CPR events fetched prior to filtering to just the subscribed citizens",
          "type": "integer"
        }
      }
    },
    "CprProviderConfigurationModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "CprSubscriptionRequest": {
      "type": "object",
      "properties": {
        "configurationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CprProviderConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "enum": [
            "Production",
            "Test"
          ]
        }
      }
    },
    "ExperianConfigurationRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "enum": [
            "Production",
            "Test"
          ]
        },
        "callbackUri": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "ExperianProviderConfigurationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "callbackUri": {
          "format": "uri",
          "type": "string"
        }
      }
    },
    "FakeProviderConfigurationModel": {
      "type": "object",
      "properties": {
        "dataFileName": {
          "type": "string"
        },
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "ServicePlatformProviderConfiguration": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string"
        },
        "subscriptionId": {
          "format": "uuid",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string",
          "enum": [
            "Production",
            "Test"
          ]
        },
        "municipalityCvr": {
          "type": "string"
        },
        "serviceAgreementUuid": {
          "format": "uuid",
          "type": "string"
        },
        "userSystemUuid": {
          "format": "uuid",
          "type": "string"
        },
        "userUuid": {
          "format": "uuid",
          "type": "string"
        },
        "certificateFileName": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "apiKey",
      "description": "Standard Authorization header using the Bearer scheme. <b>Example: \"bearer {token}\".</b> You can obtain that value from your browser Developer tools"
    }
  }
}