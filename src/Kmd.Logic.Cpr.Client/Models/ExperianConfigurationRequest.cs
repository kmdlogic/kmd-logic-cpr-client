// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.Cpr.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ExperianConfigurationRequest
    {
        /// <summary>
        /// Initializes a new instance of the ExperianConfigurationRequest
        /// class.
        /// </summary>
        public ExperianConfigurationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExperianConfigurationRequest
        /// class.
        /// </summary>
        /// <param name="environment">Possible values include: 'Production',
        /// 'Test'</param>
        public ExperianConfigurationRequest(string name, string environment = default(string), string callbackUri = default(string))
        {
            Name = name;
            Environment = environment;
            CallbackUri = callbackUri;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Production', 'Test'
        /// </summary>
        [JsonProperty(PropertyName = "environment")]
        public string Environment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "callbackUri")]
        public string CallbackUri { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
